shiny::runApp('E:/RShiny Tutorial/App-1')
runApp('E:/RShiny Tutorial/App-1')
runApp('E:/RShiny Tutorial/App-1')
runApp('E:/RShiny Tutorial/App-1')
runApp('E:/RShiny Tutorial/App-1')
library(shinythemes)
myPaths <- .libPaths()
install.packages(c("shiny", "shinythemes"), lib="C:/Program Files/R/R-4.1.1/library")
shiny::runApp('E:/RShiny Tutorial/App-1')
runApp('E:/RShiny Tutorial/App-1')
runApp('E:/RShiny Tutorial/App-2')
runApp('E:/RShiny Tutorial/App-3')
library(data.table)
library(RCurl)
library(randomForest)
install.packages(c("data.table", "RCurl", "randomForest"), lib="C:/Program Files/R/R-4.1.1/library")
shiny::runApp('E:/RShiny Tutorial/App-3')
runApp('E:/RShiny Tutorial/App-3')
shiny::runApp('E:/RShiny Tutorial/App-3')
shiny::runApp('E:/RShiny Tutorial/App-3')
shiny::runApp('E:/RShiny Tutorial/App-3')
install.packages("shinythemes", lib="C:/Program Files/R/R-4.1.2/library")
runApp('E:/RShiny Tutorial/App-3')
install.packages("RCurl", lib="C:/Program Files/R/R-4.1.2/library")
runApp('E:/RShiny Tutorial/App-3')
install.packages("randomForest", lib="C:/Program Files/R/R-4.1.2/library")
runApp('E:/RShiny Tutorial/App-3')
runApp('E:/RShiny Tutorial/App-3')
runApp('E:/RShiny Tutorial/App-3')
runApp('E:/RShiny Tutorial/App-3')
# Read data
weather <- read.csv("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv")
print(weather)
runApp('E:/RShiny Tutorial/App-3')
# Build model
model <- randomForest(play ~ ., data = weather, ntree = 500, mtry = 4, importance = TRUE)
# Read data
weather <- read.csv(text = "https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv")
print(weather)
# Read data
weather <- read.csv("https://raw.githubusercontent.com/dataprofessor/data/master/weather-weka.csv")
print(weather)
# Build model
?randomForest
print(weather[1:4])
print(weather[2:5])
model <- randomForest(play ~ ., data = weather[2:5], ntree = 500, mtry = 4, importance = TRUE)
runApp('E:/RShiny Tutorial/App-3')
runApp('E:/RShiny Tutorial/App-3')
runApp('E:/RShiny Tutorial/App-3')
print(weather[2:5])
runApp('E:/RShiny Tutorial/App-3')
runApp('E:/RShiny Tutorial/App-3')
print(weather[2:4])
install.packages(c("leaflet", "dplyr"), lib="C:/Program Files/R/R-4.1.2/library")
leaflet%>%addTiles()
leaflet()%>%addTiles()
leaflet()%>%addTiles()
library(leaflet)
library(dplyr)
leaflet()%>%addTiles()
runApp('E:/RShiny Tutorial/shiny-leaflet-tutorial')
install.packages("shinydashboard", lib="C:/Program Files/R/R-4.1.2/library")
install.packages("rgdal", lib="C:/Program Files/R/R-4.1.2/library")
set_cancensus_cache_path('C:\Users\bwman\Downloads', install = TRUE)
set_cancensus_cache_path('C:/Users/bwman/Downloads', install = TRUE)
census_data <- get_census(dataset='CA21', regions=list("3506008","3510045","3520005","3519028","3530013","3530016","3530010"),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
census_data <- get_census(dataset='CA21', regions=list("3506008","3510045","3520005","3519028","3530013","3530016","3530010"),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
census_data <- cancensus.get_census(dataset='CA21', regions=list("3506008","3510045","3520005","3519028","3530013","3530016","3530010"),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
library(cancensus)
set_cancensus_cache_path('C:/Users/bwman/Downloads', install = TRUE)
census_data <- get_census(dataset='CA21', regions=list("3506008","3510045","3520005","3519028","3530013","3530016","3530010"),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
st_write(census_data, "C:/Users/bwman/Downloads/data.shp")
census_data <- get_census(dataset='CA21', regions=list(CSD="3506008",CSD="3520005",CSD="3519028",CSD="3530013",CSD="3530016",CSD="3530010"),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
library(sf)
set_cancensus_api_key('CensusMapper_b27db873b127041761d22c0a3863d08a', install = TRUE)
census_data <- get_census(dataset='CA21', regions=list(CSD="3506008",CSD="3520005",CSD="3519028",CSD="3530013",CSD="3530016",CSD="3530010"),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
st_write(census_data, "C:/Users/bwman/Downloads/data.shp")
st_write(census_data, "C:/Users/bwman/Downloads/data21.gdb")
library(cancensus)
library(sf)
set_cancensus_api_key('CensusMapper_b27db873b127041761d22c0a3863d08a', install = TRUE)
set_cancensus_cache_path('C:/Users/bwman/Downloads', install = TRUE)
census_data <- get_census(dataset='CA21', regions=list(CSD=c("3506008","3520005","3519028","3530013","3530016","3530010")),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
st_write(census_data, "C:/Users/bwman/Downloads/data21.gdb")
st_write(census_data, "C:/Users/bwman/Downloads/data21.csv")
library(cancensus)
library(sf)
set_cancensus_api_key('CensusMapper_b27db873b127041761d22c0a3863d08a', install = TRUE)
set_cancensus_cache_path('C:/Users/bwman/Downloads', install = TRUE)
census_data <- get_census(dataset='CA16', regions=list(CSD=c("3506008","3520005","3519028","3530013","3530016","3530010")),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
st_write(census_data, "C:/Users/bwman/Downloads/data16.csv")
st_write(census_data, "C:/Users/bwman/Downloads/data21_employment.csv")
library(cancensus)
library(sf)
set_cancensus_api_key('CensusMapper_b27db873b127041761d22c0a3863d08a', install = TRUE)
set_cancensus_cache_path('C:/Users/bwman/Downloads', install = TRUE)
census_data <- get_census(dataset='CA16', regions=list(CSD=c("3506008","3520005","3519028","3530013","3530016","3530010")),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251", "v_CA21_7614"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
st_write(census_data, "C:/Users/bwman/Downloads/data21_employment.csv")
census_data <- get_census(dataset='CA21', regions=list(CSD=c("3506008","3520005","3519028","3530013","3530016","3530010")),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251", "v_CA21_7614"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
st_write(census_data, "C:/Users/bwman/Downloads/data21_employment.csv")
census_data <- get_census(dataset='CA21', regions=list(CSD=c("3506008","3520005","3519028","3530013","3530016","3530010")),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_7659","v_CA21_7662","v_CA21_7665","v_CA21_7668","v_CA21_7671","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251", "v_CA21_7614"),
level='DA', use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
st_write(census_data, "C:/Users/bwman/Downloads/data21_employment.csv")
library(cancensus)
library(sf)
set_cancensus_api_key('CensusMapper_b27db873b127041761d22c0a3863d08a', install = TRUE)
set_cancensus_cache_path('C:/Users/bwman/Downloads', install = TRUE)
'
census_data <- get_census(dataset="CA21", regions=list(CSD=c("3506008","3520005","3519028","3530013","3530016","3530010")),
vectors=c("v_CA21_7632","v_CA21_7656","v_CA21_7659","v_CA21_7662","v_CA21_7665","v_CA21_7668","v_CA21_7671","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251", "v_CA21_7614"),
level="DA", use_cache = FALSE, geo_format = "sf", quiet = TRUE)
'
census_data <- get_census(dataset="CA16", regions=list(CSD=c("3506008","3520005","3519028","3530013","3530016","3530010")),
vectors=c("v_CA16_2852","v_CA16_3411","v_CA16_3957","v_CA16_5774","v_CA16_5813","v_CA16_5816","v_CA16_5819","v_CA16_5822","v_CA16_5825","v_CA16_5828","v_CA16_4986","v_CA16_4","v_CA16_61","v_CA16_244", "v_CA16_5801"),
level="DA", use_cache = FALSE, geo_format = 'sf', quiet = TRUE)
st_write(census_data, "C:/Users/bwman/Downloads/data16_employment.csv")
#remotes::install_github("mountainmath/cancensus")
library(cancensus)
library(sf)
set_cancensus_api_key('CensusMapper_b27db873b127041761d22c0a3863d08a', install = TRUE)
set_cancensus_cache_path('C:/Users/bwman/Downloads', install = TRUE)
census_data <- get_census(dataset="CA21", regions=list(CSD=c("3506008","3520005","3519028","3530013","3530016","3530010")),
vectors=c("v_CA21_7644","v_CA21_7656","v_CA21_7659","v_CA21_7662","v_CA21_7665","v_CA21_7668","v_CA21_7671","v_CA21_4875","v_CA21_4410","v_CA21_4204","v_CA21_916", "v_CA21_11", "v_CA21_68", "v_CA21_251", "v_CA21_7614"),
level="DA", use_cache = FALSE, geo_format = "sf", quiet = TRUE)
'
census_data <- get_census(dataset="CA16", regions=list(CSD=c("3506008","3520005","3519028","3530013","3530016","3530010")),
vectors=c("v_CA16_2852","v_CA16_3411","v_CA16_3957","v_CA16_5774","v_CA16_5813","v_CA16_5816","v_CA16_5819","v_CA16_5822","v_CA16_5825","v_CA16_5828","v_CA16_4986","v_CA16_4","v_CA16_61","v_CA16_244", "v_CA16_5801"),
level="DA", use_cache = FALSE, geo_format = "sf", quiet = TRUE)
'
st_write(census_data, "C:/Users/bwman/Downloads/data21_employment_revised.csv")
library(ggplot2)
library(ggpubr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
huron <- read.csv("./huron_icecover_precip_offset.csv", sep=";")
# Perform linear regression
lm_model <- lm(LakeLevel ~ IceCover, data = huron)
# Calculate residuals
residuals <- resid(lm_model)
ggplot(data = data.frame(Residuals = residuals), aes(sample = Residuals)) +
stat_qq() +
ggtitle("QQ Plot of Residuals")
# Perform linear regression
lm_model <- lm(LakeLevel ~ IceCover_1, data = huron)
# Calculate residuals
residuals <- resid(lm_model)
ggplot(data = data.frame(Residuals = residuals), aes(sample = Residuals)) +
stat_qq() +
ggtitle("QQ Plot of Residuals")
# Perform linear regression
lm_model <- lm(LakeLevel ~ Precip, data = huron)
# Calculate residuals
residuals <- resid(lm_model)
ggplot(data = data.frame(Residuals = residuals), aes(sample = Residuals)) +
stat_qq() +
ggtitle("QQ Plot of Residuals")
# Perform linear regression
lm_model <- lm(LakeLevel ~ IceCover, data = huron)
# Calculate residuals
residuals <- resid(lm_model)
ggplot(data = data.frame(Residuals = residuals), aes(sample = Residuals)) +
stat_qq() +
ggtitle("QQ Plot of Residuals")
ggplot(data = data.frame(Residuals = residuals), aes(sample = Residuals)) +
stat_qq() +
geom_abline(intercept = mean(residuals), slope = sd(residuals)) +
ggtitle("QQ Plot")
# Perform linear regression
lm_model <- lm(LakeLevel ~ Precip, data = huron)
# Calculate residuals
residuals <- resid(lm_model)
ggplot(data = data.frame(Residuals = residuals), aes(sample = Residuals)) +
stat_qq() +
geom_abline(intercept = mean(residuals), slope = sd(residuals)) +
ggtitle("QQ Plot")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
stat_regline_equation(label.x = 30, label.y = 177.2) +
stat_cor(aes(label=..rr.label..), label.x=30, label.y=177.1)
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = Inf, y = -Inf, hjust = 1, vjust = 0.1) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = Inf, y = -Inf, hjust = 1, vjust = 0)
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = 0, vjust = 0.9) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = 0, vjust = 1) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = 5, vjust = 5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = 5, vjust = 10) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = 5, vjust = 0.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = 5, vjust = 1) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = 5, vjust = 0.05) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = 5, vjust = 0.1) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = 5, vjust = -0.1) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = 5, vjust = -0.2) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = 5, vjust = 0) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = 5, vjust = 1) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = annotate("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = 5, vjust = 0) +
geom_text(aes(label = annotate("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = 5, vjust = 1) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = 0, vjust = 0) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = 0, vjust = 1) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = 0.5, vjust = 1) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = 0.5, vjust = 2) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = -0.5, vjust = 1) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = -0.5, vjust = 2) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 2), "+", round(coef(lm_model)[2], 2), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 3))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle("Scatterplot of Values with Regression Line")
# Perform linear regression
lm_model <- lm(LakeLevel ~ IceCover_1, data = huron)
# Calculate residuals
residuals <- resid(lm_model)
ggplot(data = data.frame(Residuals = residuals), aes(sample = Residuals)) +
stat_qq() +
geom_abline(intercept = mean(residuals), slope = sd(residuals)) +
ggtitle("QQ Plot")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle("Scatterplot of Values with Regression Line")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle("Scatterplot of Values with Regression Line") +
xlab("Ice Cover (%)") +
ylab("Lake Level (MASL)")
lm_model <- lm(LakeLevel ~ Precip, data = huron)
residuals <- resid(lm_model)
ggplot(data = data.frame(Residuals = residuals), aes(sample = Residuals)) +
stat_qq() +
geom_abline(intercept = mean(residuals), slope = sd(residuals)) +
ggtitle("QQ Plot")
ggplot(huron, aes(x=IceCover, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle("Scatterplot of Values with Regression Line") +
xlab("Ice Cover (%)") +
ylab("Lake Level (MASL)")
ggplot(huron, aes(x=Precip, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle("Scatterplot of Values with Regression Line") +
xlab("Ice Cover (%)") +
ylab("Lake Level (MASL)")
ggplot(huron, aes(x=Precip, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle("Scatterplot of Values with Regression Line") +
xlab("Ice Cover (%)") +
ylab("Lake Level (MASL)")
library(ggplot2)
library(ggpubr)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
huron <- read.csv("./huron_icecover_precip_offset.csv", sep=";")
lm_model <- lm(LakeLevel ~ Precip, data = huron)
residuals <- resid(lm_model)
ggplot(data = data.frame(Residuals = residuals), aes(sample = Residuals)) +
stat_qq() +
geom_abline(intercept = mean(residuals), slope = sd(residuals)) +
ggtitle("QQ Plot")
ggplot(huron, aes(x=Precip, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle("Scatterplot of Values with Regression Line") +
xlab("Ice Cover (%)") +
ylab("Lake Level (MASL)")
ggplot(huron, aes(x=Precip, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle("Scatterplot of Values with Regression Line") +
xlab("Basin-Wide Precipitation (mm)") +
ylab("Lake Level (MASL)")
plot <- ggplot(huron, aes(x=Precip, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle(title) +
xlab("Basin-Wide Precipitation (mm)") +
ylab("Lake Level (MASL)")
png(concat(title,".png"))
png(paste(title,".png",sep=""))
title="Scatterplot of Values with Regression Line"
plot <- ggplot(huron, aes(x=Precip, y=LakeLevel)) +
geom_point() +
geom_abline(slope = coef(lm_model)[2], intercept = coef(lm_model)[1]) +
geom_text(aes(label = paste("Y =", round(coef(lm_model)[1], 5), "+", round(coef(lm_model)[2], 5), "* X")), x = -Inf, y = Inf, hjust = -0.05, vjust = 1.5) +
geom_text(aes(label = paste("R-squared =", round(summary(lm_model)$r.squared, 5))), x = -Inf, y = Inf, hjust = -0.05, vjust = 3) +
ggtitle(title) +
xlab("Basin-Wide Precipitation (mm)") +
ylab("Lake Level (MASL)")
png(paste(title,".png",sep=""))
print(myplot)
print(plot)
dev.off()
ggsave(paste("../",title,".png",sep=""))
